{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\n    const form = document.querySelector('.feedback-form');\n    const emailInput = form.querySelector('input[name=\"email\"]');\n    const messageInput = form.querySelector('textarea[name=\"message\"]');\n    \n    // Функція для збереження значень полів у локальне сховище\n    function saveFormState() {\n        const formData = {\n            email: emailInput.value.trim(),\n            message: messageInput.value.trim()\n        };\n        localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n    }\n    \n    // Функція для заповнення полів форми зі значень локального сховища\n    function populateFormFromStorage() {\n        const storedData = localStorage.getItem('feedback-form-state');\n        if (storedData) {\n            const formData = JSON.parse(storedData);\n            emailInput.value = formData.email;\n            messageInput.value = formData.message;\n        }\n    }\n    \n    // Викликаємо функцію populateFormFromStorage при завантаженні сторінки\n    populateFormFromStorage();\n    \n    // Відстежуємо події input на формі і зберігаємо значення полів\n    form.addEventListener('input', () => {\n        saveFormState();\n    });\n    \n    // Обробник події submit форми\n    form.addEventListener('submit', (event) => {\n        event.preventDefault();\n        \n        // Перевіряємо, чи обидва поля заповнені перед відправленням\n        if (emailInput.value.trim() !== '' && messageInput.value.trim() !== '') {\n            const formData = {\n                email: emailInput.value.trim(),\n                message: messageInput.value.trim()\n            };\n            console.log(formData); // Виводимо об'єкт з полями у консоль\n            \n            // Очищаємо сховище і поля форми\n            localStorage.removeItem('feedback-form-state');\n            emailInput.value = '';\n            messageInput.value = '';\n        } else {\n            alert('Please fill in both fields before submitting.');\n        }\n    });\n});\n"],"names":["form","emailInput","messageInput","saveFormState","formData","populateFormFromStorage","storedData","event"],"mappings":"uEAAA,SAAS,iBAAiB,mBAAoB,IAAM,CAChD,MAAMA,EAAO,SAAS,cAAc,gBAAgB,EAC9CC,EAAaD,EAAK,cAAc,qBAAqB,EACrDE,EAAeF,EAAK,cAAc,0BAA0B,EAGlE,SAASG,GAAgB,CACrB,MAAMC,EAAW,CACb,MAAOH,EAAW,MAAM,KAAM,EAC9B,QAASC,EAAa,MAAM,KAAM,CAC9C,EACQ,aAAa,QAAQ,sBAAuB,KAAK,UAAUE,CAAQ,CAAC,CACvE,CAGD,SAASC,GAA0B,CAC/B,MAAMC,EAAa,aAAa,QAAQ,qBAAqB,EAC7D,GAAIA,EAAY,CACZ,MAAMF,EAAW,KAAK,MAAME,CAAU,EACtCL,EAAW,MAAQG,EAAS,MAC5BF,EAAa,MAAQE,EAAS,OACjC,CACJ,CAGDC,IAGAL,EAAK,iBAAiB,QAAS,IAAM,CACjCG,GACR,CAAK,EAGDH,EAAK,iBAAiB,SAAWO,GAAU,CAIvC,GAHAA,EAAM,eAAc,EAGhBN,EAAW,MAAM,SAAW,IAAMC,EAAa,MAAM,KAAM,IAAK,GAAI,CACpE,MAAME,EAAW,CACb,MAAOH,EAAW,MAAM,KAAM,EAC9B,QAASC,EAAa,MAAM,KAAM,CAClD,EACY,QAAQ,IAAIE,CAAQ,EAGpB,aAAa,WAAW,qBAAqB,EAC7CH,EAAW,MAAQ,GACnBC,EAAa,MAAQ,EACjC,MACY,MAAM,+CAA+C,CAEjE,CAAK,CACL,CAAC"}